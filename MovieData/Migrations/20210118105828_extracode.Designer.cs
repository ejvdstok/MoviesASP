// <auto-generated />
using System;
using Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MovieData.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20210118105828_extracode")]
    partial class extracode
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Data.Models.Genre", b =>
                {
                    b.Property<int>("GenreNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Genre");

                    b.HasKey("GenreNr");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("MovieData.Models.Film", b =>
                {
                    b.Property<int>("BandNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("GenreNr")
                        .HasColumnType("int");

                    b.Property<int>("InVoorraad")
                        .HasColumnType("int");

                    b.Property<decimal>("Prijs")
                        .HasColumnType("money");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true);

                    b.Property<int>("TotaalVerhuurd")
                        .HasColumnType("int");

                    b.Property<int>("UitVoorraad")
                        .HasColumnType("int");

                    b.HasKey("BandNr");

                    b.HasIndex("GenreNr");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("MovieData.Models.Klant", b =>
                {
                    b.Property<int>("KlantNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DatumLid")
                        .HasColumnType("date");

                    b.Property<string>("Gemeente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("HuurAantal")
                        .HasColumnType("int");

                    b.Property<string>("KlantStat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Lidgeld")
                        .HasColumnType("bit");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PostCode")
                        .HasColumnType("int");

                    b.Property<string>("StraatNr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Straat_Nr");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("KlantNr");

                    b.HasIndex("DatumLid")
                        .HasDatabaseName("DATUMLID");

                    b.HasIndex("PostCode")
                        .HasDatabaseName("POSTCODE");

                    b.ToTable("Klanten");
                });

            modelBuilder.Entity("MovieData.Models.Verhuur", b =>
                {
                    b.Property<int>("VerhuurNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BandNr")
                        .HasColumnType("int");

                    b.Property<int>("KlantNr")
                        .HasColumnType("int");

                    b.Property<DateTime>("VerhuurDatum")
                        .HasColumnType("date");

                    b.HasKey("VerhuurNr");

                    b.HasIndex("BandNr")
                        .HasDatabaseName("BANDNR");

                    b.HasIndex("KlantNr")
                        .HasDatabaseName("KlantNr");

                    b.ToTable("Verhuur");
                });

            modelBuilder.Entity("MovieData.Models.Film", b =>
                {
                    b.HasOne("Data.Models.Genre", "GenreNrNavigation")
                        .WithMany("Films")
                        .HasForeignKey("GenreNr")
                        .HasConstraintName("fk_GenreNr")
                        .IsRequired();

                    b.Navigation("GenreNrNavigation");
                });

            modelBuilder.Entity("MovieData.Models.Verhuur", b =>
                {
                    b.HasOne("MovieData.Models.Film", "BandNrNavigation")
                        .WithMany("Verhuur")
                        .HasForeignKey("BandNr")
                        .HasConstraintName("fk_BandNr")
                        .IsRequired();

                    b.HasOne("MovieData.Models.Klant", "KlantNrNavigation")
                        .WithMany("Verhuur")
                        .HasForeignKey("KlantNr")
                        .HasConstraintName("fk_KlantNr")
                        .IsRequired();

                    b.Navigation("BandNrNavigation");

                    b.Navigation("KlantNrNavigation");
                });

            modelBuilder.Entity("Data.Models.Genre", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("MovieData.Models.Film", b =>
                {
                    b.Navigation("Verhuur");
                });

            modelBuilder.Entity("MovieData.Models.Klant", b =>
                {
                    b.Navigation("Verhuur");
                });
#pragma warning restore 612, 618
        }
    }
}
